/*
 * Copyright 2013 Xavier Hosxe
 *
 * Author: Xavier Hosxe (xavier . hosxe (at) gmail . com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "Env.h"

// ram_d1
float Env::incTab[1601] __attribute__((section(".instruction_ram")));

int Env::initTab = 0;

float envLinear[] = {0.0f, 1.0f};

float envExponential[] = {
	0.000000, 0.062148, 0.120174, 0.174684, 0.225892, 0.273997, 0.319188, 0.361640,
	0.401521, 0.438985, 0.474180, 0.507242, 0.538301, 0.567478, 0.594887, 0.620636,
	0.644825, 0.667548, 0.688895, 0.708948, 0.727786, 0.745483, 0.762108, 0.777725,
	0.792397, 0.806179, 0.819126, 0.831289, 0.842715, 0.853449, 0.863532, 0.873005,
	0.881903, 0.890263, 0.898115, 0.905493, 0.912423, 0.918933, 0.925049, 0.930794,
	0.936192, 0.941262, 0.946025, 0.950499, 0.954703, 0.958651, 0.962361, 0.965846,
	0.969119, 0.972195, 0.975083, 0.977797, 0.980347, 0.982742, 0.984992, 0.987105,
	0.989091, 0.990956, 0.992708, 0.994354, 0.995901, 0.997353, 0.998718, 1.000000
	};
float envLog[] = {
	0.000000, 0.000031, 0.000173, 0.000476, 0.000977, 0.001706, 0.002691, 0.003956,
	0.005524, 0.007416, 0.009651, 0.012247, 0.015223, 0.018596, 0.022381, 0.026594,
	0.031250, 0.036364, 0.041950, 0.048021, 0.054592, 0.061673, 0.069280, 0.077423,
	0.086115, 0.095367, 0.105192, 0.115600, 0.126603, 0.138212, 0.150436, 0.163288,
	0.176777, 0.190913, 0.205706, 0.221167, 0.237305, 0.254129, 0.271650, 0.289876,
	0.308816, 0.328481, 0.348878, 0.370017, 0.391906, 0.414554, 0.437970, 0.462163,
	0.487139, 0.512909, 0.539480, 0.566860, 0.595057, 0.624079, 0.653935, 0.684631,
	0.716177, 0.748578, 0.781844, 0.815981, 0.850997, 0.886900, 0.923696, 0.961394
	};
float envUsr1[] = {
	0.000000,0.07,0.055,0.042499,0.034999,0.147498,0.129998,0.117498,
	0.104997,0.307499,0.294999,0.284999,0.272499,0.257498,0.247498,0.232498,
	0.4575,0.4525,0.44,0.422499,0.407499,0.389998,0.377498,0.364998,
	0.535,0.525,0.512499,0.499999,0.489999,0.479999,0.645,0.635,
	0.619999,0.604999,0.587499,0.574998,0.73,0.72,0.712499,0.699999,
	0.684999,0.669999,0.654998,0.647498,0.767499,0.8225,0.807499,0.789999,
	0.777499,0.767498,0.754998,0.8775,0.8675,0.847499,0.834999,0.832499,
	0.9475,0.935,0.922499,0.902499,0.8825,0.975,0.995,1
	};
float envUsr2[] = {
	0.000000,0.055081,0.078188,0.100552,0.157501,0.172501,0.1875,0.1975,
	0.200001,0.200001,0.200001,0.352504,0.375005,0.390005,0.405005,0.412505,
	0.420006,0.427506,0.432506,0.437506,0.442506,0.442506,0.442506,0.59751,
	0.61751,0.63501,0.647511,0.655011,0.660011,0.667511,0.670011,0.677511,
	0.680012,0.682512,0.685012,0.687512,0.690012,0.697512,0.702512,0.705012,
	0.702512,0.702512,0.810014,0.845015,0.865016,0.877516,0.892516,0.902517,
	0.910017,0.917517,0.922517,0.925017,0.927517,0.932517,0.935017,0.940017,
	0.945018,0.950018,0.957518,0.965018,0.972518,0.980018,0.992519,1
};
float envUsr3[] = {
	0.00000,0.0375,0.26,0.137499,0.2975,0.2375,0.505,0.32,
	0.425,0.400001,0.5925,0.5025,0.33,0.72,0.57,0.29,
	0.4025,0.637498,0.5825,0.672499,0.7775,0.53,0.685,0.445,
	0.8475,0.67,0.7675,0.7525,0.545,0.605,0.445,0.685,
	0.85,0.7725,0.7525,0.812501,0.722501,0.6075,0.8075,0.855,
	0.785,0.7975,0.84,0.9075,0.9125,0.77,0.8725,0.8275,
	0.9625,0.945,0.88,0.915,0.935,0.8675,0.9525,0.91,
	0.935,0.9575,0.96,0.9525,0.975,0.965,0.980022,1
};
float envUsr4[] = {
	0.000000,0.037501,0.047501,0.0325,0.070001,0.080001,0.047498,0.064999,
	0.082499,0.105,0.167502,0.142497,0.159997,0.209998,0.237499,0.2675,
	0.149998,0.172498,0.212499,0.235,0.2975,0.235,0.277498,0.304999,
	0.34,0.259999,0.287499,0.335,0.355,0.4025,0.362498,0.3275,
	0.3975,0.462499,0.4825,0.4425,0.490011,0.4175,0.5575,0.515002,
	0.540003,0.492499,0.495,0.555,0.634999,0.585,0.6175,0.6775,
	0.607498,0.632499,0.71,0.675,0.719998,0.757499,0.79,0.6675,
	0.7425,0.794998,0.849999,0.90752,0.889999,0.942521,0.987522,1
};

void Env::init(struct EnvelopeParamsA *envParamsA, struct EnvelopeParamsB *envParamsB, uint8_t envNumber, float *algoNumber, struct EnvCurveParams *envCurve)
{
	this->envParamsA = envParamsA;
	this->envParamsB = envParamsB;
	this->envNumber = envNumber;
	this->algoNumber = algoNumber;
	this->isLoop = checkIsLoop();
	this->envCurve = envCurve;

	if (initTab == 0)
	{
		initTab = 1;
		for (float k = 1.0f; k < 1601; k += 1.0f)
		{
			incTab[(int)(k + .005f)] = BLOCK_SIZE / PREENFM_FREQUENCY / (k / 100.0f);
		}
		// 1.0 to recognize it...
		incTab[0] = 1.0f;
	}

	// Init All ADSR
	for (int k = 0; k < 4; k++)
	{
		reloadADSR(k);
		reloadADSR(k + 4);
	}

	applyCurves();
}
